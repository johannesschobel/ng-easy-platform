(globalThis.webpackChunkng_easy=globalThis.webpackChunkng_easy||[]).push([[179],{"./libs/image/src/lib sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./image-list.component.stories.ts":"./libs/image/src/lib/image-list.component.stories.ts","./image.component.stories.ts":"./libs/image/src/lib/image.component.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./libs/image/src/lib sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./libs/image/src/lib sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./libs/image/src/lib sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$",module.exports=webpackEmptyContext},"./libs/image-config/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function dedupAndSortImageSizes(imageSizes){return[...new Set([...imageSizes])].sort(((a,b)=>a-b))}var ImageFormat;__webpack_require__.d(__webpack_exports__,{D3:()=>ImageFormat,_l:()=>dedupAndSortImageSizes,CC:()=>defaultImageOptimizerConfig,zo:()=>getImageFormat,V9:()=>getImageMimeType}),function(ImageFormat){ImageFormat.Png="png",ImageFormat.Jpeg="jpeg",ImageFormat.Webp="webp",ImageFormat.Avif="avif",ImageFormat.Heif="heif"}(ImageFormat||(ImageFormat={}));const imageFormatRegexMap=Object.values(ImageFormat).reduce(((map,format)=>(map[format]=format===ImageFormat.Jpeg?/\.jpe?g$/i:new RegExp(`\\.${format}$`,"i"),map)),{});function getImageFormat(src){for(const format in imageFormatRegexMap){if(imageFormatRegexMap[format].test(src))return format}throw new Error(`Image with src "${src}" has an unknown extension.`)}const imageTypeMap=Object.values(ImageFormat).reduce(((map,format)=>(map[format]=`image/${format}`,map)),{});function getImageMimeType(srcOrFormat){if(imageTypeMap[srcOrFormat])return imageTypeMap[srcOrFormat];const format=getImageFormat(srcOrFormat);return imageTypeMap[format]}const defaultImageOptimizerConfig={deviceSizes:[640,750,828,1080,1200,1920,2048,3840],imageSizes:[16,32,48,64,96,128,256,384],quality:{"slow-2g":30,"2g":40,"3g":50,"4g":75,saveData:40,default:75},formats:[ImageFormat.Jpeg,ImageFormat.Webp]}},"./libs/image/src/lib/component/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{c:()=>ImageComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var coercion=__webpack_require__("./node_modules/@angular/cdk/fesm2020/coercion.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),services=__webpack_require__("./libs/image/src/lib/services/index.ts");let ImageComponent=class ImageComponent{constructor(imageLoaderRegistry,window,domSanitizer,elementRef,intersection){this.imageLoaderRegistry=imageLoaderRegistry,this.window=window,this.domSanitizer=domSanitizer,this.elementRef=elementRef,this.intersection=intersection,this.src="",this.alt="",this.layout="intrinsic",this.sizes="100vw",this.priority=!1,this.placeholder="empty",this.unoptimized=!1,this.objectFit="cover",this.objectPosition="50% 50%",this.loadingComplete=new core.EventEmitter,this.imageLoader=this.imageLoaderRegistry.getLoader(),this.ngOnChanges$=new Subject.x,this.changes$=this.ngOnChanges$.pipe((0,startWith.O)(void 0)),this.sizerSvg$=this.changes$.pipe((0,map.U)((()=>{if("intrinsic"!==this.layout)return null;const sizerSvg=this.window.btoa(`<svg width="${this.width}" height="${this.height}" xmlns="http://www.w3.org/2000/svg" version="1.1"/>`);return this.domSanitizer.bypassSecurityTrustUrl(`data:image/svg+xml;base64,${sizerSvg}`)}))),this.sources$=this.changes$.pipe((0,map.U)((()=>this.imageLoader.getImageSources({src:this.src,width:this.width,layout:this.layout,sizes:this.sizes,unoptimized:this.unoptimized})))),this.blurBackgroundImage$=this.changes$.pipe((0,map.U)((()=>"blur"===this.placeholder?this.blurDataURL?`url("${this.blurDataURL}")`:`url("${this.imageLoader.getPlaceholderSrc(this.src)}")`:"none"))),this.isVisible$=this.changes$.pipe((0,switchMap.w)((()=>this.intersection.isVisible(this.elementRef.nativeElement,this.priority)))),this.isImageLoaded=!1}get width(){return this._width}set width(v){this._width=null!=v?Math.max(0,(0,coercion.su)(v)):void 0}get height(){return this._height}set height(v){this._height=null!=v?Math.max(0,(0,coercion.su)(v)):void 0}set loader(loaderName){this.imageLoader=this.imageLoaderRegistry.getLoader(loaderName)}get loading(){return this.priority?"eager":"lazy"}get showSizer(){return"intrinsic"===this.layout||"responsive"===this.layout}get sizeRatio(){return null==this.height||null==this.width?0:this.height/this.width}get sizerPaddingTop(){return"responsive"===this.layout?100*this.sizeRatio+"%":"auto"}get wrapperWidth(){var _a;return"fixed"===this.layout?`${null!==(_a=this.width)&&void 0!==_a?_a:0}px`:"auto"}get wrapperHeight(){var _a;return"fixed"===this.layout?`${null!==(_a=this.height)&&void 0!==_a?_a:0}px`:"auto"}get blurFilter(){return"blur"===this.placeholder&&this.blurDataURL&&!this.isImageLoaded?"blur(20px)":"none"}ngOnChanges(){this.validateInputs(),this.ngOnChanges$.next()}ngAfterViewInit(){var _a;(null===(_a=this.image)||void 0===_a?void 0:_a.nativeElement.complete)&&this.onLoad()}getImageMime(_,{mimeType:mime}){return mime}onLoad(){if(this.image){if(!this.image.nativeElement.src.startsWith("data:")){("decode"in this.image.nativeElement?this.image.nativeElement.decode():Promise.resolve()).catch((()=>null)).then((()=>{this.isImageLoaded=!0,this.loadingComplete.emit()}))}if((0,core.isDevMode)()&&"fixed"===this.layout){const{naturalWidth,naturalHeight}=this.image.nativeElement;null!=this.width&&this.width!=naturalWidth&&console.warn(`Image with src "${this.src}" should have "width" of ${naturalWidth}.`),null!=this.height&&this.height!=naturalHeight&&console.warn(`Image with src "${this.src}" should have "height" of ${naturalHeight}.`)}}}validateInputs(){var _a,_b;if(this.src.startsWith("data:")&&(this.unoptimized=!0,this.priority=!1),"fill"!==this.layout&&(null==this.width||null==this.height||this.width<=0||this.height<=0))throw new Error(`Image with src "${this.src}" must use "width" and "height" properties or "layout='fill'" property.`);(0,core.isDevMode)()&&("fill"!==this.layout||null==this.width&&null==this.height||console.warn(`Image with src "${this.src}" and "layout='fill'" has unused properties assigned. Please remove "width" and "height".`),0===this.alt.trim().length&&console.warn(`Image with src "${this.src}" must use an "alt" property.`),this.unoptimized||this.imageLoader.supportsWidth||console.warn(`Image with src "${this.src}" uses a loader that does not implement width. Please implement it or use the "unoptimized" property instead.`),"blur"===this.placeholder&&("fill"!==this.layout&&(null!==(_a=this.width)&&void 0!==_a?_a:0)*(null!==(_b=this.height)&&void 0!==_b?_b:0)<1600&&console.warn(`Image with src "${this.src}" is smaller than 40x40. Consider removing the "placeholder='blur'" property to improve performance.`),this.blurDataURL||this.imageLoader.supportsWidth||console.warn(`Image with src "${this.src}" has "placeholder='blur'" property but is missing the "blurDataURL" property. Placeholder could be fetched from the loader, but it doesn't support optimization. Please implement it, or pass an inline "blurDataURL".`)))}};ImageComponent.ctorParameters=()=>[{type:services.L},{type:Window},{type:platform_browser.DomSanitizer},{type:core.ElementRef},{type:services.s}],ImageComponent.propDecorators={image:[{type:core.ViewChild,args:["image",{static:!1}]}],src:[{type:core.Input}],alt:[{type:core.Input}],width:[{type:core.Input}],height:[{type:core.Input}],layout:[{type:core.Input}],loader:[{type:core.Input}],sizes:[{type:core.Input}],priority:[{type:core.Input}],placeholder:[{type:core.Input}],blurDataURL:[{type:core.Input}],unoptimized:[{type:core.Input}],objectFit:[{type:core.Input}],objectPosition:[{type:core.Input}],loadingComplete:[{type:core.Output}]},ImageComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"image[src]",template:'<div\n  class="wrapper wrapper--{{ layout }}"\n  [style.width]="wrapperWidth"\n  [style.height]="wrapperHeight"\n  *ngIf="{ isVisible: isVisible$ | async } as context"\n>\n  <div class="sizer sizer--{{ layout }}" [style.padding-top]="sizerPaddingTop" *ngIf="showSizer">\n    <img *ngIf="sizerSvg$ | async as sizerSrc" [src]="sizerSrc" class="sizer__content" aria-hidden="true" alt="" role="presentation" />\n  </div>\n  <picture>\n    <ng-container *ngFor="let source of sources$ | async; let last = last; trackBy: getImageMime">\n      <ng-template #sourceTemplate>\n        <source [type]="source.mimeType" [srcset]="source.srcset" [sizes]="sizes" />\n      </ng-template>\n      <img\n        #image\n        *ngIf="last; else sourceTemplate"\n        class="img"\n        [alt]="alt"\n        [attr.loading]="loading"\n        decoding="async"\n        [style.objectFit]="objectFit"\n        [style.objectPosition]="objectPosition"\n        [style.backgroundSize]="objectFit"\n        [style.backgroundPosition]="objectPosition"\n        [style.backgroundImage]="(blurBackgroundImage$ | async) ?? \'none\'"\n        [style.filter]="blurFilter"\n        [srcset]="context.isVisible ? source.srcset : \'\'"\n        [sizes]="context.isVisible ? source.sizes : \'\'"\n        [src]="context.isVisible ? source.src : \'\'"\n        (load)="onLoad()"\n      />\n    </ng-container>\n  </picture>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[":host {\n  display: block;\n  line-height: 0;\n  font-size: 0;\n}\n\n.wrapper {\n  display: block;\n  overflow: hidden;\n  box-sizing: border-box;\n  margin: 0;\n}\n\n.wrapper--fill {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n}\n\n.wrapper--responsive {\n  position: relative;\n}\n\n.wrapper--intrinsic {\n  display: inline-block;\n  max-width: 100%;\n  position: relative;\n}\n\n.wrapper--fixed {\n  display: inline-block;\n  position: relative;\n}\n\n.wrapper .sizer {\n  display: block;\n  box-sizing: border-box;\n}\n\n.wrapper .sizer--intrinsic {\n  max-width: 100%;\n}\n\n.wrapper .sizer .sizer__content {\n  max-width: 100%;\n  display: block;\n  margin: 0;\n  border: none;\n  padding: 0;\n}\n\n.img {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  box-sizing: border-box;\n  padding: 0;\n  border: none;\n  margin: auto;\n  display: block;\n  width: 0;\n  height: 0;\n  min-width: 100%;\n  max-width: 100%;\n  min-height: 100%;\n  max-height: 100%;\n  transition: filter 0.1s ease-in-out;\n}"]}),(0,tslib_es6.w6)("design:paramtypes",[services.L,Window,platform_browser.DomSanitizer,core.ElementRef,services.s])],ImageComponent)},"./libs/image/src/lib/image.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$:()=>ImageModule});var ImageModule_1,tslib__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_common__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_ng_easy_image_config__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./libs/image-config/src/index.ts"),_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/image/src/lib/component/index.ts"),_loaders__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/image/src/lib/loaders/index.ts"),_services__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./libs/image/src/lib/services/index.ts"),_tokens__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./libs/image/src/lib/tokens/index.ts");let ImageModule=ImageModule_1=class ImageModule{constructor(loaders,loaderRegistry){loaderRegistry.registerLoaders(loaders)}static forRoot({imageOptimizerConfig,loaders}){const classLoaders=loaders.filter((loader=>null!=loader.prototype)),factoryLoaders=loaders.filter((loader=>null==loader.prototype));return{ngModule:ImageModule_1,providers:[...classLoaders.map((loader=>({provide:_loaders__WEBPACK_IMPORTED_MODULE_2__.S3,useClass:loader,multi:!0}))),...factoryLoaders.map((loader=>({provide:_loaders__WEBPACK_IMPORTED_MODULE_2__.S3,useFactory:loader,multi:!0}))),{provide:_tokens__WEBPACK_IMPORTED_MODULE_4__.z,useValue:null!=imageOptimizerConfig?imageOptimizerConfig:_ng_easy_image_config__WEBPACK_IMPORTED_MODULE_0__.CC},{provide:Window,useValue:window}]}}};ImageModule.ctorParameters=()=>[{type:Array,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,args:[_loaders__WEBPACK_IMPORTED_MODULE_2__.S3]}]},{type:_services__WEBPACK_IMPORTED_MODULE_3__.L}],ImageModule=ImageModule_1=(0,tslib__WEBPACK_IMPORTED_MODULE_6__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.NgModule)({declarations:[_component__WEBPACK_IMPORTED_MODULE_1__.c],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_7__.ez],exports:[_component__WEBPACK_IMPORTED_MODULE_1__.c]}),(0,tslib__WEBPACK_IMPORTED_MODULE_6__.w6)("design:paramtypes",[Array,_services__WEBPACK_IMPORTED_MODULE_3__.L])],ImageModule)},"./libs/image/src/lib/loaders/akamai-loader.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{s:()=>akamaiImageLoader});var _angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_tokens__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./libs/image/src/lib/tokens/index.ts"),_image_loader__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/image/src/lib/loaders/image-loader.ts");class AkamaiImageLoader extends _image_loader__WEBPACK_IMPORTED_MODULE_1__.S{constructor(root,imageOptimizerConfig){super(imageOptimizerConfig),this.root=root,this.name="akamai"}getImageUrl({src,width}){return`${this.root}/${this.normalizeSrc(src)}?imwidth=${width}`}}const akamaiImageLoader=root=>()=>new AkamaiImageLoader(root,(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.inject)(_tokens__WEBPACK_IMPORTED_MODULE_0__.z))},"./libs/image/src/lib/loaders/image-loader.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{S:()=>ImageLoader});var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),image_config_src=__webpack_require__("./libs/image-config/src/index.ts");var tokens=__webpack_require__("./libs/image/src/lib/tokens/index.ts");const viewportWidthRe=/(^|\s)(1?\d?\d)vw/g,preferredOptimizedFormats=[image_config_src.D3.Webp,image_config_src.D3.Avif,image_config_src.D3.Heif,image_config_src.D3.Jpeg],randomWidth=Math.floor(1e3*Math.random())+100;class ImageLoader{constructor(imageOptimizerConfig){this.imageOptimizerConfig=imageOptimizerConfig,this.allSizes=(0,image_config_src._l)([...this.imageOptimizerConfig.deviceSizes,...this.imageOptimizerConfig.imageSizes]),this.deviceSizes=(0,image_config_src._l)(this.imageOptimizerConfig.deviceSizes),this.supportsWidth=this.getImageUrl({src:"test",width:randomWidth,quality:75,format:image_config_src.D3.Jpeg}).includes(randomWidth.toString()),this.supportsFormat=this.getImageUrl({src:"test",width:randomWidth,quality:75,format:image_config_src.D3.Webp}).includes(image_config_src.D3.Webp);const supportedFormats=new Set([...imageOptimizerConfig.formats,image_config_src.D3.Jpeg]),preferredOptimizedFormat=preferredOptimizedFormats.find((preferredFormat=>supportedFormats.has(preferredFormat)));if(null==preferredOptimizedFormat)throw new Error("There is not a supported preferred image optimizer format.");this.preferredOptimizedFormat=preferredOptimizedFormat}getImageSources({src,width,layout,sizes,unoptimized}){if(unoptimized)return[{src,sizes:"",srcset:"",mimeType:(0,image_config_src.V9)(src)}];const{widths,kind}=this.getWidths(width,layout,sizes),quality=function getQuality(configQuality){if("number"==typeof configQuality)return configQuality;if(!("connection"in window.navigator))return configQuality.default;const connection=window.navigator.connection;if(connection.saveData)return configQuality.saveData;switch(connection.effectiveType){case"slow-2g":return configQuality["slow-2g"];case"2g":return configQuality["2g"];case"3g":return configQuality["3g"];case"4g":return configQuality["4g"]}}(this.imageOptimizerConfig.quality),supportedWidths=widths.filter((sourceWidth=>null==width||sourceWidth<=width));return(0,core.isDevMode)()&&widths.length>supportedWidths.length&&console.warn(`Image with src "${src}" has width only of ${width}px. Use a image with at least a width of ${widths[widths.length-1]}px to display it nicely on big screens.`),this.getImageOptimizedFormats(src,unoptimized).map((format=>({sizes:sizes||"w"!==kind?sizes:"100vw",srcset:supportedWidths.map(((width,index)=>`${this.getImageUrl({src,quality,width,format})} ${"w"===kind?width:index+1}${kind}`)).join(", "),src:this.getImageUrl({src,quality,width:supportedWidths[supportedWidths.length-1],format}),mimeType:(0,image_config_src.V9)(format)})))}getPlaceholderSrc(src){return this.getImageUrl({src,quality:15,width:15,format:(0,image_config_src.zo)(src)})}getImageOptimizedFormats(src,unoptimized){const format=(0,image_config_src.zo)(src);return this.supportsFormat?format===image_config_src.D3.Png?[image_config_src.D3.Png]:unoptimized?[format]:[...new Set([this.preferredOptimizedFormat,image_config_src.D3.Jpeg])]:[format]}getWidths(width,layout,sizes){if(sizes&&("fill"===layout||"responsive"===layout)){const percentSizes=[];for(let match;match=viewportWidthRe.exec(sizes);match)percentSizes.push(parseInt(match[2]));if(percentSizes.length){const smallestRatio=.01*Math.min(...percentSizes);return{widths:this.allSizes.filter((size=>size>=this.deviceSizes[0]*smallestRatio)),kind:"w"}}return{widths:[...this.allSizes],kind:"w"}}if(null==width||"fill"===layout||"responsive"===layout)return{widths:[...this.deviceSizes],kind:"w"};return{widths:[...new Set([width,2*width].map((w=>this.allSizes.find((p=>p>=w))||this.allSizes[this.allSizes.length-1])))],kind:"x"}}normalizeSrc(src){return src="/"===(src="/"===src[0]?src.slice(1):src)[src.length-1]?src.slice(0,-1):src}}ImageLoader.ctorParameters=()=>[{type:void 0,decorators:[{type:core.Inject,args:[tokens.z]}]}]},"./libs/image/src/lib/loaders/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{S3:()=>image_loader.S,pL:()=>ImigixImageLoader,sV:()=>akamai_loader.s,tI:()=>cloudinaryImageLoader});var akamai_loader=__webpack_require__("./libs/image/src/lib/loaders/akamai-loader.ts"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),tokens=__webpack_require__("./libs/image/src/lib/tokens/index.ts"),image_loader=__webpack_require__("./libs/image/src/lib/loaders/image-loader.ts");class CloudinaryImageLoader extends image_loader.S{constructor(root,imageOptimizerConfig){super(imageOptimizerConfig),this.root=root,this.name="cloudinary"}getImageUrl({src,width,quality,format}){const supportedFormat=format.replace(/jpeg/,"jpg");return`${this.root}/f_${supportedFormat},w_${width},q_${quality}/${this.normalizeSrc(src)}`}}const cloudinaryImageLoader=root=>()=>new CloudinaryImageLoader(root,(0,core.inject)(tokens.z));var ImigixImageLoader_1,tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");let ImigixImageLoader=ImigixImageLoader_1=class ImigixImageLoader extends image_loader.S{constructor(){super(...arguments),this.name="imigix"}getImageUrl({src,width,quality,format}){return`${ImigixImageLoader_1.root}/${this.normalizeSrc(src)}?w=${width}&q=${quality}&fm=${format}`}};ImigixImageLoader.root="https://assets.imgix.net",ImigixImageLoader=ImigixImageLoader_1=(0,tslib_es6.gn)([(0,core.Injectable)()],ImigixImageLoader);let RuntimeImageLoader=class RuntimeImageLoader extends image_loader.S{constructor(){super(...arguments),this.name="runtime"}getImageUrl({src,width,quality,format}){return`${src}?w=${width}&q=${quality}&fm=${format}`}};RuntimeImageLoader=(0,tslib_es6.gn)([(0,core.Injectable)()],RuntimeImageLoader)},"./libs/image/src/lib/services/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{s:()=>ImageIntersectionObserver,L:()=>ImageLoaderRegistry});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),defer=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/defer.js"),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js"),delay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/delay.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),finalize=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/finalize.js");let ImageIntersectionObserver=class ImageIntersectionObserver{constructor(){this.browserSupportsLazyLoading="loading"in HTMLImageElement.prototype,this.intersections$=new Subject.x,this.intersectionObserver=new IntersectionObserver((entries=>{this.intersections$.next(entries)}),{})}isVisible(element,priority){if(this.browserSupportsLazyLoading||priority)return(0,of.of)(!0);const complete$=new Subject.x;return(0,defer.P)((()=>(this.intersectionObserver.observe(element),this.intersections$))).pipe((0,takeUntil.R)(complete$.pipe((0,delay.g)(0))),(0,map.U)((entries=>{var _a;const entry=entries.find((entry=>entry.target===element));return null!==(_a=null==entry?void 0:entry.isIntersecting)&&void 0!==_a&&_a})),(0,distinctUntilChanged.x)(),(0,tap.b)((visible=>{visible&&(complete$.next(),complete$.complete())})),(0,finalize.x)((()=>this.intersectionObserver.unobserve(element))))}};ImageIntersectionObserver=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],ImageIntersectionObserver);let ImageLoaderRegistry=class ImageLoaderRegistry{constructor(){this.loaderMap=new Map,this.defaultLoader=null}registerLoaders(loaders){loaders.forEach((loader=>{null==this.defaultLoader&&(this.defaultLoader=loader),this.loaderMap.has(loader.name)&&console.error(`Duplicated image loader with name "${loader.name}". Fix it by declaring image loaders only in one module.`),this.loaderMap.set(loader.name,loader)}))}getLoader(loaderName){if(null==loaderName){if(null==this.defaultLoader)throw new Error("There are no image loaders configured, provide at least one in the configuration.");return this.defaultLoader}const loader=this.loaderMap.get(loaderName);if(null==loader)throw new Error('There is no image loader with name "loaderName".');return loader}};ImageLoaderRegistry=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],ImageLoaderRegistry)},"./libs/image/src/lib/tokens/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>IMAGE_OPTIMIZER_CONFIG});const IMAGE_OPTIMIZER_CONFIG=new(__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs").InjectionToken)("@ng-easy/image:image-optimizer-config")},"./libs/image/src/lib/image-list.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,default:()=>__WEBPACK_DEFAULT_EXPORT__});var tslib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_image_module__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/image/src/lib/image.module.ts"),_loaders__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/image/src/lib/loaders/index.ts");let ImageListComponent=class ImageListComponent{};ImageListComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_3__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({template:'\n    <h2><code>layout="intrinsic"</code></h2>\n    <image layout="intrinsic" src="unsplash/bear.jpg" alt="Bear" [width]="4752" [height]="3168" placeholder="blur"></image>\n\n    <h2><code>layout="fixed"</code></h2>\n    <image layout="fixed" loader="akamai" src="10.jpg" alt="Car" [width]="1366" [height]="768" placeholder="blur"></image>\n\n    <h2><code>layout="responsive"</code></h2>\n    <image layout="intrinsic" src="examples/kingfisher.jpg" alt="Kingfisher" [width]="4136" [height]="2757" placeholder="blur"></image>\n\n    <h2><code>layout="fill"</code></h2>\n    <div style="width: 100%; height: 250px; position: relative">\n      <image layout="fill" loader="cloudinary" src="balloons.jpg" alt="Balloons" placeholder="blur"></image>\n    </div>\n  ',changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_4__.ChangeDetectionStrategy.OnPush})],ImageListComponent);let ImageListModule=class ImageListModule{};ImageListModule=(0,tslib__WEBPACK_IMPORTED_MODULE_3__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.NgModule)({imports:[_image_module__WEBPACK_IMPORTED_MODULE_1__.$],declarations:[ImageListComponent],exports:[ImageListComponent]})],ImageListModule);const __WEBPACK_DEFAULT_EXPORT__={title:"Image",component:ImageListComponent,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_image_module__WEBPACK_IMPORTED_MODULE_1__.$.forRoot({loaders:[_loaders__WEBPACK_IMPORTED_MODULE_2__.pL,(0,_loaders__WEBPACK_IMPORTED_MODULE_2__.tI)("https://res.cloudinary.com/idemo/image/upload"),(0,_loaders__WEBPACK_IMPORTED_MODULE_2__.sV)("https://www.akamai.com/content/dam/site/im-demo/media-viewer/")]}),ImageListModule]})],parameters:{controls:{include:[]}}},Example=(args=>({component:ImageListComponent,props:args})).bind({});Example.args={}},"./libs/image/src/lib/image.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Fill:()=>Fill,Fixed:()=>Fixed,Intrinsic:()=>Intrinsic,Responsive:()=>Responsive,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/image/src/lib/component/index.ts"),_image_module__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/image/src/lib/image.module.ts"),_loaders__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./libs/image/src/lib/loaders/index.ts"),_loaders_akamai_loader__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./libs/image/src/lib/loaders/akamai-loader.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Image/ImageComponent",component:_component__WEBPACK_IMPORTED_MODULE_1__.c,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_image_module__WEBPACK_IMPORTED_MODULE_2__.$.forRoot({loaders:[_loaders__WEBPACK_IMPORTED_MODULE_3__.pL,(0,_loaders__WEBPACK_IMPORTED_MODULE_3__.tI)("https://res.cloudinary.com/idemo/image/upload"),(0,_loaders_akamai_loader__WEBPACK_IMPORTED_MODULE_4__.s)("https://www.akamai.com/content/dam/site/im-demo/media-viewer/")]})]})],parameters:{controls:{include:["src","loader","alt","width","height","layout","sizes","priority","placeholder","blurDataURL","unoptimized","objectFit","objectPosition","loadingComplete"]}},args:{src:"unsplash/bear.jpg",alt:"Bear",width:4752,height:3168,placeholder:"blur"},argTypes:{src:{},width:{},height:{},layout:{control:{type:"select"},table:{defaultValue:{summary:"intrinsic"}}},sizes:{},placeholder:{control:{type:"select"},table:{defaultValue:{summary:"empty"}}},blurDataURL:{},unoptimized:{table:{defaultValue:{summary:!1}}},priority:{table:{defaultValue:{summary:!1}}},objectFit:{control:{type:"select"},table:{defaultValue:{summary:"cover"}}},objectPosition:{table:{defaultValue:{summary:"50% 50%"}}}}},Template=args=>({component:_component__WEBPACK_IMPORTED_MODULE_1__.c,props:args}),Intrinsic=Template.bind({});Intrinsic.args={};const Fixed=Template.bind({});Fixed.args={layout:"fixed",loader:"akamai",src:"10.jpg",alt:"Car",width:1366,height:768};const Responsive=Template.bind({});Responsive.args={layout:"responsive",src:"examples/kingfisher.jpg",alt:"Kingfisher",width:4136,height:2757};const Fill=Template.bind({});Fill.args={layout:"fill",loader:"cloudinary",src:"balloons.jpg",alt:"Balloons",width:void 0,height:void 0}},"./libs/image/.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:()=>__namedExportsOrder,parameters:()=>parameters});var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[{"name":"ImageModuleConfig","id":"interface-ImageModuleConfig-440ef9d1f856f682008f7c37ee9af741f5c87977c85a83cd8c253dc32873d573f9a10b208e396f0f61d46a28994958718f7f452b105379a4639ed1cdb4bb106c","file":"src/lib/image.module.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Inject, ModuleWithProviders, NgModule, Provider, Type } from \'@angular/core\';\\n\\nimport { defaultImageOptimizerConfig, ImageOptimizerConfig } from \'@ng-easy/image-config\';\\n\\nimport { ImageComponent } from \'./component\';\\nimport { ImageLoader } from \'./loaders\';\\nimport { ImageLoaderRegistry } from \'./services\';\\nimport { IMAGE_OPTIMIZER_CONFIG } from \'./tokens\';\\n\\nexport interface ImageModuleConfig {\\n  imageOptimizerConfig?: ImageOptimizerConfig;\\n  loaders: (Type<ImageLoader> | (() => ImageLoader))[];\\n}\\n\\n@NgModule({\\n  declarations: [ImageComponent],\\n  imports: [CommonModule],\\n  exports: [ImageComponent],\\n})\\nexport class ImageModule {\\n  static forRoot({ imageOptimizerConfig, loaders }: ImageModuleConfig): ModuleWithProviders<ImageModule> {\\n    const classLoaders: Type<ImageLoader>[] = loaders.filter((loader): loader is Type<ImageLoader> => loader.prototype != null);\\n    const factoryLoaders: (() => ImageLoader)[] = loaders.filter((loader): loader is () => ImageLoader => loader.prototype == null);\\n\\n    return {\\n      ngModule: ImageModule,\\n      providers: [\\n        ...classLoaders.map((loader): Provider => ({ provide: ImageLoader, useClass: loader, multi: true })),\\n        ...factoryLoaders.map((loader): Provider => ({ provide: ImageLoader, useFactory: loader, multi: true })),\\n        { provide: IMAGE_OPTIMIZER_CONFIG, useValue: imageOptimizerConfig ?? defaultImageOptimizerConfig },\\n        { provide: Window, useValue: window },\\n      ],\\n    };\\n  }\\n\\n  constructor(@Inject(ImageLoader) loaders: ImageLoader[], loaderRegistry: ImageLoaderRegistry) {\\n    loaderRegistry.registerLoaders(loaders);\\n  }\\n}\\n","properties":[{"name":"imageOptimizerConfig","deprecated":false,"deprecationMessage":"","type":"ImageOptimizerConfig","optional":true,"description":"","line":12},{"name":"loaders","deprecated":false,"deprecationMessage":"","type":"(Type<ImageLoader> | )[]","optional":false,"description":"","line":13}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"ImageSources","id":"interface-ImageSources-ae71e23551e70baeefc7e233b3a8591e304149a1af7efd71ebdaf42fd6da7200dab812f425ec12ba2877dd9f717358cd369cf7cc9a50efa6928e9ae3c53d9f2a","file":"src/lib/models/image-sources.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ImageMimeType } from \'@ng-easy/image-config\';\\n\\nexport interface ImageSources {\\n  srcset: string;\\n  sizes: string;\\n  src: string;\\n  mimeType: ImageMimeType;\\n}\\n","properties":[{"name":"mimeType","deprecated":false,"deprecationMessage":"","type":"ImageMimeType","optional":false,"description":"","line":7},{"name":"sizes","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"src","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"srcset","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"ImageSourcesOptions","id":"interface-ImageSourcesOptions-878df9f3076c0fb28362d0d9b026afec46f0a6f237f66d4de0688b78145b865ea830a298095b6e4d7631cec46ee8f69b62ff4d6cbba4b8a7044f41b781f2192f","file":"src/lib/models/image-sources-options.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ImageLayout } from \'./image-layout\';\\n\\nexport interface ImageSourcesOptions {\\n  src: string;\\n  width: number | undefined;\\n  layout: ImageLayout;\\n  sizes: string;\\n  unoptimized: boolean;\\n}\\n","properties":[{"name":"layout","deprecated":false,"deprecationMessage":"","type":"ImageLayout","optional":false,"description":"","line":6},{"name":"sizes","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"src","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"unoptimized","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":8},{"name":"width","deprecated":false,"deprecationMessage":"","type":"number | undefined","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"ImageUrlOptions","id":"interface-ImageUrlOptions-6f8cd13345db0e578b85e7d9011af0047a59d368ab14387db7bec9c6a6bea7fa5da290660d83353dec2a8bba980db3a1e9e4a7b1abd410428b9e7d8df96ce6ac","file":"src/lib/models/image-url-options.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ImageFormat } from \'@ng-easy/image-config\';\\n\\nexport interface ImageUrlOptions {\\n  src: string;\\n  width: number;\\n  quality: number;\\n  format: ImageFormat;\\n}\\n","properties":[{"name":"format","deprecated":false,"deprecationMessage":"","type":"ImageFormat","optional":false,"description":"","line":7},{"name":"quality","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":6},{"name":"src","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"width","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]}],"injectables":[{"name":"ImageIntersectionObserver","id":"injectable-ImageIntersectionObserver-bfac611eba06c6ce90cf645c4898c069075e337f6d1a85ea57efb3e57528c5b91c833a6eeea567c37560f80fa68fdde40c67312954bd229c1a832a8ab15bd69a","file":"src/lib/services/image-intersection-observer.service.ts","properties":[],"methods":[{"name":"isVisible","args":[{"name":"element","type":"Element","deprecated":false,"deprecationMessage":""},{"name":"priority","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"element","type":"Element","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"priority","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { defer, Observable, of, Subject } from \'rxjs\';\\nimport { delay, distinctUntilChanged, finalize, map, takeUntil, tap } from \'rxjs/operators\';\\n\\n// Reference: https://web.dev/browser-level-image-lazy-loading\\n@Injectable({ providedIn: \'root\' })\\nexport class ImageIntersectionObserver {\\n  private readonly browserSupportsLazyLoading: boolean = \'loading\' in HTMLImageElement.prototype;\\n  private readonly intersections$ = new Subject<IntersectionObserverEntry[]>();\\n  private readonly intersectionObserver = new IntersectionObserver(\\n    (entries) => {\\n      this.intersections$.next(entries);\\n    },\\n    {\\n      // TODO: tweak distances\\n      // https://web.dev/browser-level-image-lazy-loading/\\n    }\\n  );\\n\\n  isVisible(element: Element, priority: boolean): Observable<boolean> {\\n    if (this.browserSupportsLazyLoading || priority) {\\n      return of(true);\\n    }\\n\\n    const complete$ = new Subject<void>();\\n    return defer(() => {\\n      this.intersectionObserver.observe(element);\\n      return this.intersections$;\\n    }).pipe(\\n      takeUntil(complete$.pipe(delay(0))),\\n      map((entries: IntersectionObserverEntry[]) => {\\n        const entry: IntersectionObserverEntry | undefined = entries.find((entry) => entry.target === element);\\n        return entry?.isIntersecting ?? false;\\n      }),\\n      distinctUntilChanged(),\\n      tap((visible) => {\\n        if (visible) {\\n          complete$.next();\\n          complete$.complete();\\n        }\\n      }),\\n      finalize(() => this.intersectionObserver.unobserve(element))\\n    );\\n  }\\n}\\n","type":"injectable"},{"name":"ImageLoaderRegistry","id":"injectable-ImageLoaderRegistry-328f970919a51f838ee09d7f9ab5fe3a9afdf6b8ac28dfe0ce37c2743d503eb48e0bf6293cb7c3729f7c1f6c24de46dbc5a703b0c78a437870cff44c34a9f24f","file":"src/lib/services/image-loader-registry.service.ts","properties":[],"methods":[{"name":"getLoader","args":[{"name":"loaderName","type":"string | null","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"ImageLoader","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"loaderName","type":"string | null","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"registerLoaders","args":[{"name":"loaders","type":"ImageLoader[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"loaders","type":"ImageLoader[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\nimport { ImageLoader } from \'../loaders\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class ImageLoaderRegistry {\\n  private readonly loaderMap = new Map<string, ImageLoader>();\\n  private defaultLoader: ImageLoader | null = null;\\n\\n  registerLoaders(loaders: ImageLoader[]) {\\n    loaders.forEach((loader) => {\\n      // First loader is treated as the default one\\n      if (this.defaultLoader == null) {\\n        this.defaultLoader = loader;\\n      }\\n\\n      if (this.loaderMap.has(loader.name)) {\\n        console.error(`Duplicated image loader with name \\"${loader.name}\\". Fix it by declaring image loaders only in one module.`);\\n      }\\n\\n      this.loaderMap.set(loader.name, loader);\\n    });\\n  }\\n\\n  getLoader(loaderName?: string | null): ImageLoader {\\n    if (loaderName == null) {\\n      if (this.defaultLoader == null) {\\n        throw new Error(`There are no image loaders configured, provide at least one in the configuration.`);\\n      }\\n      return this.defaultLoader;\\n    }\\n\\n    const loader: ImageLoader | undefined = this.loaderMap.get(loaderName);\\n    if (loader == null) {\\n      throw new Error(`There is no image loader with name \\"loaderName\\".`);\\n    }\\n    return loader;\\n  }\\n}\\n","type":"injectable"},{"name":"ImigixImageLoader","id":"injectable-ImigixImageLoader-44c0a305d261e5213279aa77bb63accde314d0e5ca58374eb1fe036a03fabdc5448659db8428db4272d1c036a099199c75fa9ffdc10468cff02c411c836b62db","file":"src/lib/loaders/imigix-loader.ts","properties":[{"name":"name","defaultValue":"\'imigix\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}},{"name":"supportsFormat","defaultValue":"this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Webp,\\n  }).includes(ImageFormat.Webp)","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}},{"name":"supportsWidth","defaultValue":"this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Jpeg,\\n  }).includes(randomWidth.toString())","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}}],"methods":[{"name":"getImageUrl","args":[{"type":"ImageUrlOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"ImageUrlOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"getImageSources","args":[{"type":"ImageSourcesOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImageSources[]","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"ImageSourcesOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"getPlaceholderSrc","args":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"normalizeSrc","args":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\nimport { ImageUrlOptions } from \'../models\';\\nimport { ImageLoader } from \'./image-loader\';\\n\\n@Injectable()\\nexport class ImigixImageLoader extends ImageLoader {\\n  private static root = \'https://assets.imgix.net\';\\n  readonly name = \'imigix\';\\n\\n  // Example: https://assets.imgix.net/unsplash/bear.jpg?w=1080&q=75&fm=webp\\n  getImageUrl({ src, width, quality, format }: ImageUrlOptions) {\\n    return `${ImigixImageLoader.root}/${this.normalizeSrc(src)}?w=${width}&q=${quality}&fm=${format}`;\\n  }\\n}\\n","extends":"ImageLoader","type":"injectable"},{"name":"RuntimeImageLoader","id":"injectable-RuntimeImageLoader-06d19a0d430a23f8802c1567d05804fa3951bd9d33e7bf94878250b2a5be91b8fa7ee60f4001c0fb30b665157058de47da28b30b33fc2b84f60be2999828301a","file":"src/lib/loaders/runtime-loader.ts","properties":[{"name":"name","defaultValue":"\'runtime\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}},{"name":"supportsFormat","defaultValue":"this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Webp,\\n  }).includes(ImageFormat.Webp)","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}},{"name":"supportsWidth","defaultValue":"this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Jpeg,\\n  }).includes(randomWidth.toString())","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}}],"methods":[{"name":"getImageUrl","args":[{"type":"ImageUrlOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"ImageUrlOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"getImageSources","args":[{"type":"ImageSourcesOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImageSources[]","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"ImageSourcesOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"getPlaceholderSrc","args":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"normalizeSrc","args":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\nimport { ImageUrlOptions } from \'../models\';\\nimport { ImageLoader } from \'./image-loader\';\\n\\n@Injectable()\\nexport class RuntimeImageLoader extends ImageLoader {\\n  readonly name = \'runtime\';\\n\\n  getImageUrl({ src, width, quality, format }: ImageUrlOptions) {\\n    return `${src}?w=${width}&q=${quality}&fm=${format}`;\\n  }\\n}\\n","extends":"ImageLoader","type":"injectable"}],"guards":[],"interceptors":[],"classes":[{"name":"AkamaiImageLoader","id":"class-AkamaiImageLoader-2d35dc7f86c977bf11aa82b9b771e2a658ffc19400b63e19ab397158adaa181553d6b4416787c50ca4ebf15c59f6db4324881b95359beceddab0fc7ccafbf10f","file":"src/lib/loaders/akamai-loader.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { inject } from \'@angular/core\';\\n\\nimport { ImageOptimizerConfig } from \'@ng-easy/image-config\';\\n\\nimport { ImageUrlOptions } from \'../models\';\\nimport { IMAGE_OPTIMIZER_CONFIG } from \'../tokens\';\\nimport { ImageLoader } from \'./image-loader\';\\n\\nclass AkamaiImageLoader extends ImageLoader {\\n  readonly name = \'akamai\';\\n\\n  constructor(private readonly root: string, imageOptimizerConfig: ImageOptimizerConfig) {\\n    super(imageOptimizerConfig);\\n  }\\n\\n  // Example: https://www.akamai.com/fetch-dv-data/www/im-demo/360/01.jpg?imwidth=5000\\n  getImageUrl({ src, width }: ImageUrlOptions) {\\n    return `${this.root}/${this.normalizeSrc(src)}?imwidth=${width}`;\\n  }\\n}\\n\\nexport const akamaiImageLoader = (root: string) => () => {\\n  return new AkamaiImageLoader(root, inject(IMAGE_OPTIMIZER_CONFIG));\\n};\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"root","type":"string","deprecated":false,"deprecationMessage":""},{"name":"imageOptimizerConfig","type":"ImageOptimizerConfig","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"root","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"imageOptimizerConfig","type":"ImageOptimizerConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"name","defaultValue":"\'akamai\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}},{"name":"supportsFormat","defaultValue":"this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Webp,\\n  }).includes(ImageFormat.Webp)","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}},{"name":"supportsWidth","defaultValue":"this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Jpeg,\\n  }).includes(randomWidth.toString())","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}}],"methods":[{"name":"getImageUrl","args":[{"type":"ImageUrlOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"ImageUrlOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"getImageSources","args":[{"type":"ImageSourcesOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImageSources[]","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"ImageSourcesOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"getPlaceholderSrc","args":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"normalizeSrc","args":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}}],"indexSignatures":[],"extends":"ImageLoader","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"CloudinaryImageLoader","id":"class-CloudinaryImageLoader-84639209cc363199b677942575e5eee290fd6cecd3ad93b404699b1d25254fa2fa6f38552931a678924e3e804aee6cdd1c20b5d8c759a368e0a23844d54329f9","file":"src/lib/loaders/cloudinary-loader.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { inject } from \'@angular/core\';\\n\\nimport { ImageOptimizerConfig } from \'@ng-easy/image-config\';\\n\\nimport { ImageUrlOptions } from \'../models\';\\nimport { IMAGE_OPTIMIZER_CONFIG } from \'../tokens\';\\nimport { ImageLoader } from \'./image-loader\';\\n\\nclass CloudinaryImageLoader extends ImageLoader {\\n  readonly name = \'cloudinary\';\\n\\n  constructor(private readonly root: string, imageOptimizerConfig: ImageOptimizerConfig) {\\n    super(imageOptimizerConfig);\\n  }\\n\\n  // Example: https://res.cloudinary.com/idemo/image/upload/f_webp,q_75,w_355/balloons.jpg\\n  getImageUrl({ src, width, quality, format }: ImageUrlOptions) {\\n    const supportedFormat: string = format.replace(/jpeg/, \'jpg\');\\n    return `${this.root}/f_${supportedFormat},w_${width},q_${quality}/${this.normalizeSrc(src)}`;\\n  }\\n}\\n\\nexport const cloudinaryImageLoader = (root: string) => () => {\\n  return new CloudinaryImageLoader(root, inject(IMAGE_OPTIMIZER_CONFIG));\\n};\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"root","type":"string","deprecated":false,"deprecationMessage":""},{"name":"imageOptimizerConfig","type":"ImageOptimizerConfig","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"root","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"imageOptimizerConfig","type":"ImageOptimizerConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"name","defaultValue":"\'cloudinary\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}},{"name":"supportsFormat","defaultValue":"this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Webp,\\n  }).includes(ImageFormat.Webp)","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}},{"name":"supportsWidth","defaultValue":"this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Jpeg,\\n  }).includes(randomWidth.toString())","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26,"modifierKind":[144],"inheritance":{"file":"ImageLoader"}}],"methods":[{"name":"getImageUrl","args":[{"type":"ImageUrlOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"ImageUrlOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"getImageSources","args":[{"type":"ImageSourcesOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImageSources[]","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"ImageSourcesOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"getPlaceholderSrc","args":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}},{"name":"normalizeSrc","args":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImageLoader"}}],"indexSignatures":[],"extends":"ImageLoader","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ImageLoader","id":"class-ImageLoader-08ea9aa97e390c1e1938dccac0f02bf40ce3ab484832682c5efff79828293c32a999c7a18ab1501c4b4964df695348a0aad3662bcb78cbc44240a53444c1d66a","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Inject, isDevMode } from \'@angular/core\';\\n\\nimport { ImageFormat, dedupAndSortImageSizes, getImageFormat, ImageOptimizerConfig, getImageMimeType } from \'@ng-easy/image-config\';\\n\\nimport { getQuality } from \'../functions\';\\nimport { ImageUrlOptions, ImageSourcesOptions, ImageSources, ImageLayout } from \'../models\';\\nimport { IMAGE_OPTIMIZER_CONFIG } from \'../tokens\';\\n\\nconst viewportWidthRe = /(^|\\\\s)(1?\\\\d?\\\\d)vw/g;\\nconst preferredOptimizedFormats: readonly ImageFormat[] = [ImageFormat.Webp, ImageFormat.Avif, ImageFormat.Heif, ImageFormat.Jpeg] as const;\\nconst placeholderQuality = 15;\\nconst placeholderWidth = 15;\\nconst randomWidth: number = Math.floor(Math.random() * 1000) + 100;\\n\\n/**\\n * Provider that resolves image URLs.\\n */\\nexport abstract class ImageLoader {\\n  private readonly allSizes: readonly number[] = dedupAndSortImageSizes([\\n    ...this.imageOptimizerConfig.deviceSizes,\\n    ...this.imageOptimizerConfig.imageSizes,\\n  ]);\\n  private readonly deviceSizes: readonly number[] = dedupAndSortImageSizes(this.imageOptimizerConfig.deviceSizes);\\n  private readonly preferredOptimizedFormat: ImageFormat;\\n\\n  readonly supportsWidth: boolean = this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Jpeg,\\n  }).includes(randomWidth.toString());\\n\\n  readonly supportsFormat: boolean = this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Webp,\\n  }).includes(ImageFormat.Webp);\\n\\n  abstract readonly name: string;\\n\\n  constructor(@Inject(IMAGE_OPTIMIZER_CONFIG) protected readonly imageOptimizerConfig: ImageOptimizerConfig) {\\n    const supportedFormats: Set<ImageFormat> = new Set([...imageOptimizerConfig.formats, ImageFormat.Jpeg]);\\n    const preferredOptimizedFormat: ImageFormat | undefined = preferredOptimizedFormats.find((preferredFormat) =>\\n      supportedFormats.has(preferredFormat)\\n    );\\n    if (preferredOptimizedFormat == null) {\\n      throw new Error(`There is not a supported preferred image optimizer format.`);\\n    }\\n    this.preferredOptimizedFormat = preferredOptimizedFormat;\\n  }\\n\\n  abstract getImageUrl(options: ImageUrlOptions): string;\\n\\n  getImageSources({ src, width, layout, sizes, unoptimized }: ImageSourcesOptions): ImageSources[] {\\n    if (unoptimized) {\\n      return [{ src, sizes: \'\', srcset: \'\', mimeType: getImageMimeType(src) }];\\n    }\\n\\n    const { widths, kind } = this.getWidths(width, layout, sizes);\\n    const quality: number = getQuality(this.imageOptimizerConfig.quality);\\n\\n    // Only use widths inferior to original image\\n    const supportedWidths: number[] = widths.filter((sourceWidth) => width == null || sourceWidth <= width);\\n\\n    if (isDevMode() && widths.length > supportedWidths.length) {\\n      console.warn(\\n        `Image with src \\"${src}\\" has width only of ${width}px. Use a image with at least a width of ${\\n          widths[widths.length - 1]\\n        }px to display it nicely on big screens.`\\n      );\\n    }\\n\\n    return this.getImageOptimizedFormats(src, unoptimized).map((format) => ({\\n      sizes: !sizes && kind === \'w\' ? \'100vw\' : sizes,\\n      srcset: supportedWidths\\n        .map((width, index) => `${this.getImageUrl({ src, quality, width, format })} ${kind === \'w\' ? width : index + 1}${kind}`)\\n        .join(\', \'),\\n      src: this.getImageUrl({ src, quality, width: supportedWidths[supportedWidths.length - 1], format }),\\n      mimeType: getImageMimeType(format),\\n    }));\\n  }\\n\\n  getPlaceholderSrc(src: string): string {\\n    return this.getImageUrl({\\n      src,\\n      quality: placeholderQuality,\\n      width: placeholderWidth,\\n      format: getImageFormat(src),\\n    });\\n  }\\n\\n  private getImageOptimizedFormats(src: string, unoptimized: boolean): ImageFormat[] {\\n    const format: ImageFormat = getImageFormat(src);\\n\\n    if (!this.supportsFormat) {\\n      return [format];\\n    } else if (format === ImageFormat.Png) {\\n      return [ImageFormat.Png];\\n    } else if (unoptimized) {\\n      return [format];\\n    } else {\\n      return [...new Set([this.preferredOptimizedFormat, ImageFormat.Jpeg])];\\n    }\\n  }\\n\\n  private getWidths(width: number | undefined, layout: ImageLayout, sizes: string): { widths: number[]; kind: \'w\' | \'x\' } {\\n    if (sizes && (layout === \'fill\' || layout === \'responsive\')) {\\n      // Find all the \\"vw\\" percent sizes used in the sizes prop\\n      const percentSizes: number[] = [];\\n      for (let match; (match = viewportWidthRe.exec(sizes)); match) {\\n        percentSizes.push(parseInt(match[2]));\\n      }\\n\\n      if (percentSizes.length) {\\n        const smallestRatio: number = Math.min(...percentSizes) * 0.01;\\n        return {\\n          widths: this.allSizes.filter((size: number) => size >= this.deviceSizes[0] * smallestRatio),\\n          kind: \'w\',\\n        };\\n      }\\n      return { widths: [...this.allSizes], kind: \'w\' };\\n    }\\n\\n    if (width == null || layout === \'fill\' || layout === \'responsive\') {\\n      return { widths: [...this.deviceSizes], kind: \'w\' };\\n    }\\n\\n    const widths: number[] = [\\n      ...new Set(\\n        // > This means that most OLED screens that say they are 3x resolution,\\n        // > are actually 3x in the green color, but only 1.5x in the red and\\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\\n        // > resolution image will be visually the same, though the 3x image\\n        // > takes significantly more data. Even true 3x resolution screens are\\n        // > wasteful as the human eye cannot see that level of detail without\\n        // > something like a magnifying glass.\\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\\n        [width, width * 2].map((w) => this.allSizes.find((p) => p >= w) || this.allSizes[this.allSizes.length - 1])\\n      ),\\n    ];\\n    return { widths, kind: \'x\' };\\n  }\\n\\n  protected normalizeSrc(src: string): string {\\n    src = src[0] === \'/\' ? src.slice(1) : src; // Trim initial /\\n    src = src[src.length - 1] === \'/\' ? src.slice(0, -1) : src;\\n    return src;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"imageOptimizerConfig","type":"ImageOptimizerConfig","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"imageOptimizerConfig","type":"ImageOptimizerConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40,"modifierKind":[126,144]},{"name":"supportsFormat","defaultValue":"this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Webp,\\n  }).includes(ImageFormat.Webp)","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33,"modifierKind":[144]},{"name":"supportsWidth","defaultValue":"this.getImageUrl({\\n    src: \'test\',\\n    width: randomWidth,\\n    quality: 75,\\n    format: ImageFormat.Jpeg,\\n  }).includes(randomWidth.toString())","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26,"modifierKind":[144]}],"description":"<p>Provider that resolves image URLs.</p>\\n","rawdescription":"\\n\\nProvider that resolves image URLs.\\n","methods":[{"name":"getImageSources","args":[{"type":"ImageSourcesOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImageSources[]","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"ImageSourcesOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getImageUrl","args":[{"name":"options","type":"ImageUrlOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"options","type":"ImageUrlOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getPlaceholderSrc","args":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"normalizeSrc","args":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[122],"jsdoctags":[{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[],"components":[{"name":"ImageComponent","id":"component-ImageComponent-63145100149affc258aaf6384249f1f2095ebfdb7788b26a644fe7971c14813ff108a0cca18f090bea15ded27d68f485e7d35fcced12a4053517f46b2c6f3ac1","file":"src/lib/component/image.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"image[src]","styleUrls":["image.component.scss"],"styles":[],"templateUrl":["image.component.html"],"viewProviders":[],"inputsClass":[{"name":"alt","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe `alt` attribute provides alternative information for an image if a user for some reason cannot view it\\n(because of slow connection, an error in the src attribute, or if the user uses a screen reader).\\n","description":"<p>The <code>alt</code> attribute provides alternative information for an image if a user for some reason cannot view it\\n(because of slow connection, an error in the src attribute, or if the user uses a screen reader).</p>\\n","line":40,"type":"string","decorators":[]},{"name":"blurDataURL","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nA Data URL to be used as a placeholder image before the `src` image successfully loads. Only takes effect when combined with `placeholder=\\"blur\\"`.\\nMust be a base64-encoded image. It will be enlarged and blurred, so a very small image (10px or less) is recommended. Including larger images as placeholders may harm your application performance.\\n\\nIf not provided inline and the loader supports optimization a small placeholder will be fetched automatically.\\n","description":"<p>A Data URL to be used as a placeholder image before the <code>src</code> image successfully loads. Only takes effect when combined with <code>placeholder=&quot;blur&quot;</code>.\\nMust be a base64-encoded image. It will be enlarged and blurred, so a very small image (10px or less) is recommended. Including larger images as placeholders may harm your application performance.</p>\\n<p>If not provided inline and the loader supports optimization a small placeholder will be fetched automatically.</p>\\n","line":112,"type":"string","decorators":[]},{"name":"height","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe height of the image, in pixels. Must be an integer without a unit.\\nRequired, except for those with `layout=\\"fill\\"`.\\n","description":"<p>The height of the image, in pixels. Must be an integer without a unit.\\nRequired, except for those with <code>layout=&quot;fill&quot;</code>.</p>\\n","line":58,"type":"number | undefined","decorators":[]},{"name":"layout","defaultValue":"\'intrinsic\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe layout behavior of the image as the viewport changes size. Defaults to `intrinsic`.\\nTODO: confirm functionality with next.js\\n* When `fixed,` the image dimensions will not change as the viewport changes (no responsiveness) similar to the native img element.\\n* When `intrinsic`, the image will scale the dimensions down for smaller viewports but maintain the original dimensions for larger viewports.\\n* When `responsive`, the image will scale the dimensions down for smaller viewports and scale up for larger viewports.\\n* When `fill`, the image will stretch both width and height to the dimensions of the parent element, provided the parent element is relative. This is usually paired with the objectFit property.\\n","description":"<p>The layout behavior of the image as the viewport changes size. Defaults to <code>intrinsic</code>.\\nTODO: confirm functionality with next.js</p>\\n<ul>\\n<li>When <code>fixed,</code> the image dimensions will not change as the viewport changes (no responsiveness) similar to the native img element.</li>\\n<li>When <code>intrinsic</code>, the image will scale the dimensions down for smaller viewports but maintain the original dimensions for larger viewports.</li>\\n<li>When <code>responsive</code>, the image will scale the dimensions down for smaller viewports and scale up for larger viewports.</li>\\n<li>When <code>fill</code>, the image will stretch both width and height to the dimensions of the parent element, provided the parent element is relative. This is usually paired with the objectFit property.</li>\\n</ul>\\n","line":74,"type":"ImageLayout","decorators":[]},{"name":"loader","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe name of the loader to be used. If in configuration there is only one, this property can be omitted, the default will be used.\\n","description":"<p>The name of the loader to be used. If in configuration there is only one, this property can be omitted, the default will be used.</p>\\n","line":79,"type":"string","decorators":[]},{"name":"objectFit","defaultValue":"\'cover\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe image fit when using `layout=\\"fill\\"`.\\n","description":"<p>The image fit when using <code>layout=&quot;fill&quot;</code>.</p>\\n","line":122,"type":"ObjectFit","decorators":[]},{"name":"objectPosition","defaultValue":"\'50% 50%\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe image fit when using `layout=\\"fill\\"`.\\n","description":"<p>The image fit when using <code>layout=&quot;fill&quot;</code>.</p>\\n","line":127,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'empty\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nA placeholder to use while the image is loading in base, possible values are blur or empty. Defaults to `empty`.\\n\\nWhen `blur`, the `blurDataURL` property will be used as the placeholder.\\nIf using server-side rendering then `blurDataURL` will automatically be populated.\\n\\nWhen `empty`, there will be no placeholder while the image is loading, only empty space.\\n","description":"<p>A placeholder to use while the image is loading in base, possible values are blur or empty. Defaults to <code>empty</code>.</p>\\n<p>When <code>blur</code>, the <code>blurDataURL</code> property will be used as the placeholder.\\nIf using server-side rendering then <code>blurDataURL</code> will automatically be populated.</p>\\n<p>When <code>empty</code>, there will be no placeholder while the image is loading, only empty space.</p>\\n","line":104,"type":"ImagePlaceholder","decorators":[]},{"name":"priority","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen true, the image will be considered high priority and preload.\\nShould only be used when the image is visible above the fold. Defaults to false.\\nIs used only in server-side rendering.\\n","description":"<p>When true, the image will be considered high priority and preload.\\nShould only be used when the image is visible above the fold. Defaults to false.\\nIs used only in server-side rendering.</p>\\n","line":94,"type":"boolean","decorators":[]},{"name":"sizes","defaultValue":"\'100vw\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nA string mapping media queries to device sizes. Defaults to `100vw`.\\nWe recommend setting sizes when using `layout=\\"responsive\\"` or `layout=\\"fill\\"` and your image will not be the same width as the viewport.\\n","description":"<p>A string mapping media queries to device sizes. Defaults to <code>100vw</code>.\\nWe recommend setting sizes when using <code>layout=&quot;responsive&quot;</code> or <code>layout=&quot;fill&quot;</code> and your image will not be the same width as the viewport.</p>\\n","line":87,"type":"string","decorators":[]},{"name":"src","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRequired, must be a path string. This can be either an absolute external URL, or an internal path depending on the loader.\\n","description":"<p>Required, must be a path string. This can be either an absolute external URL, or an internal path depending on the loader.</p>\\n","line":34,"type":"string","decorators":[]},{"name":"unoptimized","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen true, the source image will be served as-is instead of changing quality, size, or format. Defaults to `false`.\\n","description":"<p>When true, the source image will be served as-is instead of changing quality, size, or format. Defaults to <code>false</code>.</p>\\n","line":117,"type":"boolean","decorators":[]},{"name":"width","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe width of the image, in pixels. Must be an integer without a unit.\\nRequired, except for those with `layout=\\"fill\\"`.\\n","description":"<p>The width of the image, in pixels. Must be an integer without a unit.\\nRequired, except for those with <code>layout=&quot;fill&quot;</code>.</p>\\n","line":46,"type":"number | undefined","decorators":[]}],"outputsClass":[{"name":"loadingComplete","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOutput emits once the image is completely loaded and the placeholder has been removed.\\n","description":"<p>Output emits once the image is completely loaded and the placeholder has been removed.</p>\\n","line":132,"type":"EventEmitter"}],"propertiesClass":[{"name":"blurBackgroundImage$","defaultValue":"this.changes$.pipe(\\n    map(() => {\\n      if (this.placeholder === \'blur\') {\\n        return this.blurDataURL ? `url(\\"${this.blurDataURL}\\")` : `url(\\"${this.imageLoader.getPlaceholderSrc(this.src)}\\")`;\\n      } else {\\n        return \'none\';\\n      }\\n    })\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<string>","optional":false,"description":"","line":199,"modifierKind":[144]},{"name":"image","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLImageElement>","optional":true,"description":"","line":29,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'image\', {static: false}"}],"modifierKind":[144]},{"name":"isVisible$","defaultValue":"this.changes$.pipe(\\n    switchMap(() => this.intersection.isVisible(this.elementRef.nativeElement, this.priority))\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":209,"modifierKind":[144]},{"name":"sizerSvg$","defaultValue":"this.changes$.pipe(\\n    map(() => {\\n      if (this.layout !== \'intrinsic\') {\\n        return null;\\n      }\\n\\n      // Create a placeholder svg and convert it to base64\\n      const sizerSvg: string = this.window.btoa(\\n        `<svg width=\\"${this.width}\\" height=\\"${this.height}\\" xmlns=\\"http://www.w3.org/2000/svg\\" version=\\"1.1\\"/>`\\n      );\\n\\n      return this.domSanitizer.bypassSecurityTrustUrl(`data:image/svg+xml;base64,${sizerSvg}`);\\n    })\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<SafeUrl | null>","optional":false,"description":"","line":171,"modifierKind":[144]},{"name":"sources$","defaultValue":"this.changes$.pipe(\\n    map(() =>\\n      this.imageLoader.getImageSources({\\n        src: this.src,\\n        width: this.width,\\n        layout: this.layout,\\n        sizes: this.sizes,\\n        unoptimized: this.unoptimized,\\n      })\\n    )\\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<ImageSources[]>","optional":false,"description":"","line":187,"modifierKind":[144]}],"methodsClass":[{"name":"getImageMime","args":[{"name":"_","type":"number","deprecated":false,"deprecationMessage":""},{"type":"ImageSources","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImageSources","typeParameters":[],"line":235,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"_","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"type":"ImageSources","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onLoad","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":240,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { coerceNumberProperty, NumberInput } from \'@angular/cdk/coercion\';\\nimport {\\n  Component,\\n  ChangeDetectionStrategy,\\n  Input,\\n  Output,\\n  EventEmitter,\\n  OnChanges,\\n  isDevMode,\\n  AfterViewInit,\\n  ViewChild,\\n  ElementRef,\\n} from \'@angular/core\';\\nimport { DomSanitizer, SafeUrl } from \'@angular/platform-browser\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { map, startWith, switchMap } from \'rxjs/operators\';\\n\\nimport { ImageLoader } from \'../loaders\';\\nimport { ImageLayout, ImagePlaceholder, ObjectFit, ImageSources } from \'../models\';\\nimport { ImageIntersectionObserver, ImageLoaderRegistry } from \'../services\';\\n\\n@Component({\\n  selector: \'image[src]\',\\n  templateUrl: \'image.component.html\',\\n  styleUrls: [\'image.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ImageComponent implements OnChanges, AfterViewInit {\\n  @ViewChild(\'image\', { static: false }) readonly image?: ElementRef<HTMLImageElement>;\\n\\n  /**\\n   * Required, must be a path string. This can be either an absolute external URL, or an internal path depending on the loader.\\n   */\\n  @Input() src = \'\';\\n\\n  /**\\n   * The `alt` attribute provides alternative information for an image if a user for some reason cannot view it\\n   * (because of slow connection, an error in the src attribute, or if the user uses a screen reader).\\n   */\\n  @Input() alt = \'\';\\n\\n  /**\\n   * The width of the image, in pixels. Must be an integer without a unit.\\n   * Required, except for those with `layout=\\"fill\\"`.\\n   */\\n  @Input() get width(): number | undefined {\\n    return this._width;\\n  }\\n  set width(v: NumberInput) {\\n    this._width = v != null ? Math.max(0, coerceNumberProperty(v)) : undefined;\\n  }\\n  private _width?: number;\\n\\n  /**\\n   * The height of the image, in pixels. Must be an integer without a unit.\\n   * Required, except for those with `layout=\\"fill\\"`.\\n   */\\n  @Input() get height(): number | undefined {\\n    return this._height;\\n  }\\n  set height(v: NumberInput) {\\n    this._height = v != null ? Math.max(0, coerceNumberProperty(v)) : undefined;\\n  }\\n  private _height?: number;\\n\\n  /**\\n   * The layout behavior of the image as the viewport changes size. Defaults to `intrinsic`.\\n   * TODO: confirm functionality with next.js\\n   * * When `fixed,` the image dimensions will not change as the viewport changes (no responsiveness) similar to the native img element.\\n   * * When `intrinsic`, the image will scale the dimensions down for smaller viewports but maintain the original dimensions for larger viewports.\\n   * * When `responsive`, the image will scale the dimensions down for smaller viewports and scale up for larger viewports.\\n   * * When `fill`, the image will stretch both width and height to the dimensions of the parent element, provided the parent element is relative. This is usually paired with the objectFit property.\\n   */\\n  @Input() layout: ImageLayout = \'intrinsic\';\\n\\n  /**\\n   * The name of the loader to be used. If in configuration there is only one, this property can be omitted, the default will be used.\\n   */\\n  @Input() set loader(loaderName: string) {\\n    this.imageLoader = this.imageLoaderRegistry.getLoader(loaderName);\\n  }\\n\\n  /**\\n   * A string mapping media queries to device sizes. Defaults to `100vw`.\\n   * We recommend setting sizes when using `layout=\\"responsive\\"` or `layout=\\"fill\\"` and your image will not be the same width as the viewport.\\n   */\\n  @Input() sizes = \'100vw\';\\n\\n  /**\\n   * When true, the image will be considered high priority and preload.\\n   * Should only be used when the image is visible above the fold. Defaults to false.\\n   * Is used only in server-side rendering.\\n   */\\n  @Input() priority = false;\\n\\n  /**\\n   * A placeholder to use while the image is loading in base, possible values are blur or empty. Defaults to `empty`.\\n   *\\n   * When `blur`, the `blurDataURL` property will be used as the placeholder.\\n   * If using server-side rendering then `blurDataURL` will automatically be populated.\\n   *\\n   * When `empty`, there will be no placeholder while the image is loading, only empty space.\\n   */\\n  @Input() placeholder: ImagePlaceholder = \'empty\';\\n\\n  /**\\n   * A Data URL to be used as a placeholder image before the `src` image successfully loads. Only takes effect when combined with `placeholder=\\"blur\\"`.\\n   * Must be a base64-encoded image. It will be enlarged and blurred, so a very small image (10px or less) is recommended. Including larger images as placeholders may harm your application performance.\\n   *\\n   * If not provided inline and the loader supports optimization a small placeholder will be fetched automatically.\\n   */\\n  @Input() blurDataURL?: string;\\n\\n  /**\\n   * When true, the source image will be served as-is instead of changing quality, size, or format. Defaults to `false`.\\n   */\\n  @Input() unoptimized = false;\\n\\n  /**\\n   * The image fit when using `layout=\\"fill\\"`.\\n   */\\n  @Input() objectFit: ObjectFit = \'cover\';\\n\\n  /**\\n   * The image fit when using `layout=\\"fill\\"`.\\n   */\\n  @Input() objectPosition = \'50% 50%\';\\n\\n  /**\\n   * Output emits once the image is completely loaded and the placeholder has been removed.\\n   */\\n  @Output() loadingComplete = new EventEmitter<void>();\\n\\n  private imageLoader: ImageLoader = this.imageLoaderRegistry.getLoader();\\n\\n  get loading(): \'eager\' | \'lazy\' {\\n    return this.priority ? \'eager\' : \'lazy\';\\n  }\\n\\n  get showSizer(): boolean {\\n    return this.layout === \'intrinsic\' || this.layout === \'responsive\';\\n  }\\n\\n  get sizeRatio(): number {\\n    return this.height == null || this.width == null ? 0 : this.height / this.width;\\n  }\\n\\n  get sizerPaddingTop(): string {\\n    return this.layout === \'responsive\' ? `${this.sizeRatio * 100}%` : \'auto\';\\n  }\\n\\n  get wrapperWidth(): string {\\n    return this.layout === \'fixed\' ? `${this.width ?? 0}px` : \'auto\';\\n  }\\n\\n  get wrapperHeight(): string {\\n    return this.layout === \'fixed\' ? `${this.height ?? 0}px` : \'auto\';\\n  }\\n\\n  get blurFilter(): string {\\n    if (this.placeholder === \'blur\' && this.blurDataURL && !this.isImageLoaded) {\\n      return `blur(20px)`;\\n    } else {\\n      return \'none\';\\n    }\\n  }\\n\\n  private readonly ngOnChanges$ = new Subject<void>();\\n  private readonly changes$: Observable<void> = this.ngOnChanges$.pipe(startWith(undefined as void));\\n\\n  readonly sizerSvg$: Observable<SafeUrl | null> = this.changes$.pipe(\\n    map(() => {\\n      if (this.layout !== \'intrinsic\') {\\n        return null;\\n      }\\n\\n      // Create a placeholder svg and convert it to base64\\n      const sizerSvg: string = this.window.btoa(\\n        `<svg width=\\"${this.width}\\" height=\\"${this.height}\\" xmlns=\\"http://www.w3.org/2000/svg\\" version=\\"1.1\\"/>`\\n      );\\n\\n      return this.domSanitizer.bypassSecurityTrustUrl(`data:image/svg+xml;base64,${sizerSvg}`);\\n    })\\n  );\\n\\n  // TODO: Make this reactive based on network\\n  readonly sources$: Observable<ImageSources[]> = this.changes$.pipe(\\n    map(() =>\\n      this.imageLoader.getImageSources({\\n        src: this.src,\\n        width: this.width,\\n        layout: this.layout,\\n        sizes: this.sizes,\\n        unoptimized: this.unoptimized,\\n      })\\n    )\\n  );\\n\\n  readonly blurBackgroundImage$: Observable<string> = this.changes$.pipe(\\n    map(() => {\\n      if (this.placeholder === \'blur\') {\\n        return this.blurDataURL ? `url(\\"${this.blurDataURL}\\")` : `url(\\"${this.imageLoader.getPlaceholderSrc(this.src)}\\")`;\\n      } else {\\n        return \'none\';\\n      }\\n    })\\n  );\\n\\n  readonly isVisible$: Observable<boolean> = this.changes$.pipe(\\n    switchMap(() => this.intersection.isVisible(this.elementRef.nativeElement, this.priority))\\n  );\\n\\n  private isImageLoaded = false;\\n\\n  constructor(\\n    private readonly imageLoaderRegistry: ImageLoaderRegistry,\\n    private readonly window: Window,\\n    private readonly domSanitizer: DomSanitizer,\\n    private readonly elementRef: ElementRef,\\n    private readonly intersection: ImageIntersectionObserver\\n  ) {}\\n\\n  ngOnChanges() {\\n    this.validateInputs();\\n    this.ngOnChanges$.next();\\n  }\\n\\n  ngAfterViewInit() {\\n    if (this.image?.nativeElement.complete) {\\n      // In case the image was rendered by SSR and already completed\\n      this.onLoad();\\n    }\\n  }\\n\\n  getImageMime(_: number, { mimeType: mime }: ImageSources) {\\n    return mime;\\n  }\\n\\n  // TODO: fix this being called twice\\n  onLoad() {\\n    if (!this.image) {\\n      return;\\n    }\\n\\n    if (!this.image.nativeElement.src.startsWith(\'data:\')) {\\n      const decodePromise: Promise<void> = \'decode\' in this.image.nativeElement ? this.image.nativeElement.decode() : Promise.resolve();\\n\\n      decodePromise\\n        .catch(() => null)\\n        .then(() => {\\n          this.isImageLoaded = true;\\n          this.loadingComplete.emit();\\n        });\\n    }\\n\\n    if (isDevMode() && this.layout === \'fixed\') {\\n      // Check if the size of the image was OK, can help while developing\\n      const { naturalWidth, naturalHeight } = this.image.nativeElement;\\n\\n      if (this.width != null && this.width != naturalWidth) {\\n        console.warn(`Image with src \\"${this.src}\\" should have \\"width\\" of ${naturalWidth}.`);\\n      }\\n\\n      if (this.height != null && this.height != naturalHeight) {\\n        console.warn(`Image with src \\"${this.src}\\" should have \\"height\\" of ${naturalHeight}.`);\\n      }\\n    }\\n  }\\n\\n  // eslint-disable-next-line sonarjs/cognitive-complexity\\n  private validateInputs() {\\n    if (this.src.startsWith(\'data:\')) {\\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\\n      this.unoptimized = true;\\n      this.priority = false;\\n    }\\n\\n    if (this.layout !== \'fill\' && (this.width == null || this.height == null || this.width <= 0 || this.height <= 0)) {\\n      throw new Error(`Image with src \\"${this.src}\\" must use \\"width\\" and \\"height\\" properties or \\"layout=\'fill\'\\" property.`);\\n    }\\n\\n    if (!isDevMode()) {\\n      return;\\n    }\\n\\n    if (this.layout === \'fill\' && (this.width != null || this.height != null)) {\\n      console.warn(`Image with src \\"${this.src}\\" and \\"layout=\'fill\'\\" has unused properties assigned. Please remove \\"width\\" and \\"height\\".`);\\n    }\\n\\n    if (this.alt.trim().length === 0) {\\n      console.warn(`Image with src \\"${this.src}\\" must use an \\"alt\\" property.`);\\n    }\\n\\n    if (!this.unoptimized && !this.imageLoader.supportsWidth) {\\n      console.warn(\\n        `Image with src \\"${this.src}\\" uses a loader that does not implement width. Please implement it or use the \\"unoptimized\\" property instead.`\\n      );\\n    }\\n\\n    if (this.placeholder === \'blur\') {\\n      if (this.layout !== \'fill\' && (this.width ?? 0) * (this.height ?? 0) < 1600) {\\n        console.warn(\\n          `Image with src \\"${this.src}\\" is smaller than 40x40. Consider removing the \\"placeholder=\'blur\'\\" property to improve performance.`\\n        );\\n      }\\n\\n      if (!this.blurDataURL && !this.imageLoader.supportsWidth) {\\n        console.warn(\\n          `Image with src \\"${this.src}\\" has \\"placeholder=\'blur\'\\" property but is missing the \\"blurDataURL\\" property. ` +\\n            `Placeholder could be fetched from the loader, but it doesn\'t support optimization. ` +\\n            `Please implement it, or pass an inline \\"blurDataURL\\".`\\n        );\\n      }\\n    }\\n  }\\n\\n  // TODO: unit tests\\n  // TODO: in SSR use as background color the predominant one\\n  // TODO: generate blur placeholder in SSR\\n  // TODO: implement priority adding preload to head in SSR\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  line-height: 0;\\n  font-size: 0;\\n}\\n\\n.wrapper {\\n  display: block;\\n  overflow: hidden;\\n  box-sizing: border-box;\\n  margin: 0;\\n\\n  &--fill {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    right: 0;\\n  }\\n\\n  &--responsive {\\n    position: relative;\\n  }\\n\\n  &--intrinsic {\\n    display: inline-block;\\n    max-width: 100%;\\n    position: relative;\\n  }\\n\\n  &--fixed {\\n    display: inline-block;\\n    position: relative;\\n  }\\n\\n  & .sizer {\\n    display: block;\\n    box-sizing: border-box;\\n\\n    &--intrinsic {\\n      max-width: 100%;\\n    }\\n\\n    & .sizer__content {\\n      max-width: 100%;\\n      display: block;\\n      margin: 0;\\n      border: none;\\n      padding: 0;\\n    }\\n  }\\n}\\n\\n.img {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n\\n  box-sizing: border-box;\\n  padding: 0;\\n  border: none;\\n  margin: auto;\\n\\n  display: block;\\n  width: 0;\\n  height: 0;\\n  min-width: 100%;\\n  max-width: 100%;\\n  min-height: 100%;\\n  max-height: 100%;\\n\\n  // TODO: accessibility don\'t prefer animations friendly\\n  transition: filter 0.1s ease-in-out;\\n}\\n","styleUrl":"image.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"imageLoaderRegistry","type":"ImageLoaderRegistry","deprecated":false,"deprecationMessage":""},{"name":"window","type":"Window","deprecated":false,"deprecationMessage":""},{"name":"domSanitizer","type":"DomSanitizer","deprecated":false,"deprecationMessage":""},{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"intersection","type":"ImageIntersectionObserver","deprecated":false,"deprecationMessage":""}],"line":213,"jsdoctags":[{"name":"imageLoaderRegistry","type":"ImageLoaderRegistry","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"window","type":"Window","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"domSanitizer","type":"DomSanitizer","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"intersection","type":"ImageIntersectionObserver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnChanges","AfterViewInit"],"accessors":{"width":{"name":"width","setSignature":{"name":"width","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"v","type":"NumberInput","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":49,"jsdoctags":[{"name":"v","type":"NumberInput","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"width","type":"","returnType":"number | undefined","line":46,"rawdescription":"\\n\\nThe width of the image, in pixels. Must be an integer without a unit.\\nRequired, except for those with `layout=\\"fill\\"`.\\n","description":"<p>The width of the image, in pixels. Must be an integer without a unit.\\nRequired, except for those with <code>layout=&quot;fill&quot;</code>.</p>\\n"}},"height":{"name":"height","setSignature":{"name":"height","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"v","type":"NumberInput","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":61,"jsdoctags":[{"name":"v","type":"NumberInput","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"height","type":"","returnType":"number | undefined","line":58,"rawdescription":"\\n\\nThe height of the image, in pixels. Must be an integer without a unit.\\nRequired, except for those with `layout=\\"fill\\"`.\\n","description":"<p>The height of the image, in pixels. Must be an integer without a unit.\\nRequired, except for those with <code>layout=&quot;fill&quot;</code>.</p>\\n"}},"loader":{"name":"loader","setSignature":{"name":"loader","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"loaderName","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":79,"rawdescription":"\\n\\nThe name of the loader to be used. If in configuration there is only one, this property can be omitted, the default will be used.\\n","description":"<p>The name of the loader to be used. If in configuration there is only one, this property can be omitted, the default will be used.</p>\\n","jsdoctags":[{"name":"loaderName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"loading":{"name":"loading","getSignature":{"name":"loading","type":"","returnType":"\\"eager\\" | \\"lazy\\"","line":136}},"showSizer":{"name":"showSizer","getSignature":{"name":"showSizer","type":"boolean","returnType":"boolean","line":140}},"sizeRatio":{"name":"sizeRatio","getSignature":{"name":"sizeRatio","type":"number","returnType":"number","line":144}},"sizerPaddingTop":{"name":"sizerPaddingTop","getSignature":{"name":"sizerPaddingTop","type":"string","returnType":"string","line":148}},"wrapperWidth":{"name":"wrapperWidth","getSignature":{"name":"wrapperWidth","type":"string","returnType":"string","line":152}},"wrapperHeight":{"name":"wrapperHeight","getSignature":{"name":"wrapperHeight","type":"string","returnType":"string","line":156}},"blurFilter":{"name":"blurFilter","getSignature":{"name":"blurFilter","type":"string","returnType":"string","line":160}}},"templateData":"<div\\n  class=\\"wrapper wrapper--{{ layout }}\\"\\n  [style.width]=\\"wrapperWidth\\"\\n  [style.height]=\\"wrapperHeight\\"\\n  *ngIf=\\"{ isVisible: isVisible$ | async } as context\\"\\n>\\n  <div class=\\"sizer sizer--{{ layout }}\\" [style.padding-top]=\\"sizerPaddingTop\\" *ngIf=\\"showSizer\\">\\n    <img *ngIf=\\"sizerSvg$ | async as sizerSrc\\" [src]=\\"sizerSrc\\" class=\\"sizer__content\\" aria-hidden=\\"true\\" alt=\\"\\" role=\\"presentation\\" />\\n  </div>\\n  <picture>\\n    <ng-container *ngFor=\\"let source of sources$ | async; let last = last; trackBy: getImageMime\\">\\n      <ng-template #sourceTemplate>\\n        <source [type]=\\"source.mimeType\\" [srcset]=\\"source.srcset\\" [sizes]=\\"sizes\\" />\\n      </ng-template>\\n      <img\\n        #image\\n        *ngIf=\\"last; else sourceTemplate\\"\\n        class=\\"img\\"\\n        [alt]=\\"alt\\"\\n        [attr.loading]=\\"loading\\"\\n        decoding=\\"async\\"\\n        [style.objectFit]=\\"objectFit\\"\\n        [style.objectPosition]=\\"objectPosition\\"\\n        [style.backgroundSize]=\\"objectFit\\"\\n        [style.backgroundPosition]=\\"objectPosition\\"\\n        [style.backgroundImage]=\\"(blurBackgroundImage$ | async) ?? \'none\'\\"\\n        [style.filter]=\\"blurFilter\\"\\n        [srcset]=\\"context.isVisible ? source.srcset : \'\'\\"\\n        [sizes]=\\"context.isVisible ? source.sizes : \'\'\\"\\n        [src]=\\"context.isVisible ? source.src : \'\'\\"\\n        (load)=\\"onLoad()\\"\\n      />\\n    </ng-container>\\n  </picture>\\n</div>\\n"},{"name":"ImageListComponent","id":"component-ImageListComponent-8ce7391967d1df4309a5f26b09b8663af52b37f6d33df7d0efcf48361dbeae31d255a5de5f515526ba1bcad39dce291eff47c16614e270b5bef7df072845d67d","file":"src/lib/image-list.component.stories.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"template":"<h2><code>layout=\\"intrinsic\\"</code></h2>\\n<image layout=\\"intrinsic\\" src=\\"unsplash/bear.jpg\\" alt=\\"Bear\\" [width]=\\"4752\\" [height]=\\"3168\\" placeholder=\\"blur\\"></image>\\n\\n<h2><code>layout=\\"fixed\\"</code></h2>\\n<image layout=\\"fixed\\" loader=\\"akamai\\" src=\\"10.jpg\\" alt=\\"Car\\" [width]=\\"1366\\" [height]=\\"768\\" placeholder=\\"blur\\"></image>\\n\\n<h2><code>layout=\\"responsive\\"</code></h2>\\n<image layout=\\"intrinsic\\" src=\\"examples/kingfisher.jpg\\" alt=\\"Kingfisher\\" [width]=\\"4136\\" [height]=\\"2757\\" placeholder=\\"blur\\"></image>\\n\\n<h2><code>layout=\\"fill\\"</code></h2>\\n<div style=\\"width: 100%; height: 250px; position: relative\\">\\n  <image layout=\\"fill\\" loader=\\"cloudinary\\" src=\\"balloons.jpg\\" alt=\\"Balloons\\" placeholder=\\"blur\\"></image>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ChangeDetectionStrategy, NgModule } from \'@angular/core\';\\nimport { moduleMetadata, Meta, Story } from \'@storybook/angular\';\\n\\nimport { ImageComponent } from \'./component\';\\nimport { ImageModule } from \'./image.module\';\\nimport { akamaiImageLoader, cloudinaryImageLoader, ImigixImageLoader } from \'./loaders\';\\n\\n@Component({\\n  template: `\\n    <h2><code>layout=\\"intrinsic\\"</code></h2>\\n    <image layout=\\"intrinsic\\" src=\\"unsplash/bear.jpg\\" alt=\\"Bear\\" [width]=\\"4752\\" [height]=\\"3168\\" placeholder=\\"blur\\"></image>\\n\\n    <h2><code>layout=\\"fixed\\"</code></h2>\\n    <image layout=\\"fixed\\" loader=\\"akamai\\" src=\\"10.jpg\\" alt=\\"Car\\" [width]=\\"1366\\" [height]=\\"768\\" placeholder=\\"blur\\"></image>\\n\\n    <h2><code>layout=\\"responsive\\"</code></h2>\\n    <image layout=\\"intrinsic\\" src=\\"examples/kingfisher.jpg\\" alt=\\"Kingfisher\\" [width]=\\"4136\\" [height]=\\"2757\\" placeholder=\\"blur\\"></image>\\n\\n    <h2><code>layout=\\"fill\\"</code></h2>\\n    <div style=\\"width: 100%; height: 250px; position: relative\\">\\n      <image layout=\\"fill\\" loader=\\"cloudinary\\" src=\\"balloons.jpg\\" alt=\\"Balloons\\" placeholder=\\"blur\\"></image>\\n    </div>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nclass ImageListComponent {}\\n\\n@NgModule({\\n  imports: [ImageModule],\\n  declarations: [ImageListComponent],\\n  exports: [ImageListComponent],\\n})\\nclass ImageListModule {}\\n\\nexport default {\\n  title: \'Image\',\\n  component: ImageListComponent,\\n  decorators: [\\n    moduleMetadata({\\n      imports: [\\n        ImageModule.forRoot({\\n          loaders: [\\n            ImigixImageLoader,\\n            cloudinaryImageLoader(\'https://res.cloudinary.com/idemo/image/upload\'),\\n            akamaiImageLoader(\'https://www.akamai.com/content/dam/site/im-demo/media-viewer/\'),\\n          ],\\n        }),\\n        ImageListModule,\\n      ],\\n    }),\\n  ],\\n  parameters: {\\n    controls: { include: [] },\\n    // TODO: https://github.com/storybookjs/storybook/issues/7149\\n    // options: { showPanel: false },\\n  },\\n} as Meta<ImageComponent>;\\n\\nconst Template: Story<ImageListComponent> = (args: ImageListComponent) => ({\\n  component: ImageListComponent,\\n  props: args,\\n});\\n\\nexport const Example = Template.bind({});\\nExample.args = {};\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""}],"modules":[{"name":"ImageListModule","id":"module-ImageListModule-8ce7391967d1df4309a5f26b09b8663af52b37f6d33df7d0efcf48361dbeae31d255a5de5f515526ba1bcad39dce291eff47c16614e270b5bef7df072845d67d","description":"","deprecationMessage":"","deprecated":false,"file":"src/lib/image-list.component.stories.ts","methods":[],"sourceCode":"import { Component, ChangeDetectionStrategy, NgModule } from \'@angular/core\';\\nimport { moduleMetadata, Meta, Story } from \'@storybook/angular\';\\n\\nimport { ImageComponent } from \'./component\';\\nimport { ImageModule } from \'./image.module\';\\nimport { akamaiImageLoader, cloudinaryImageLoader, ImigixImageLoader } from \'./loaders\';\\n\\n@Component({\\n  template: `\\n    <h2><code>layout=\\"intrinsic\\"</code></h2>\\n    <image layout=\\"intrinsic\\" src=\\"unsplash/bear.jpg\\" alt=\\"Bear\\" [width]=\\"4752\\" [height]=\\"3168\\" placeholder=\\"blur\\"></image>\\n\\n    <h2><code>layout=\\"fixed\\"</code></h2>\\n    <image layout=\\"fixed\\" loader=\\"akamai\\" src=\\"10.jpg\\" alt=\\"Car\\" [width]=\\"1366\\" [height]=\\"768\\" placeholder=\\"blur\\"></image>\\n\\n    <h2><code>layout=\\"responsive\\"</code></h2>\\n    <image layout=\\"intrinsic\\" src=\\"examples/kingfisher.jpg\\" alt=\\"Kingfisher\\" [width]=\\"4136\\" [height]=\\"2757\\" placeholder=\\"blur\\"></image>\\n\\n    <h2><code>layout=\\"fill\\"</code></h2>\\n    <div style=\\"width: 100%; height: 250px; position: relative\\">\\n      <image layout=\\"fill\\" loader=\\"cloudinary\\" src=\\"balloons.jpg\\" alt=\\"Balloons\\" placeholder=\\"blur\\"></image>\\n    </div>\\n  `,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nclass ImageListComponent {}\\n\\n@NgModule({\\n  imports: [ImageModule],\\n  declarations: [ImageListComponent],\\n  exports: [ImageListComponent],\\n})\\nclass ImageListModule {}\\n\\nexport default {\\n  title: \'Image\',\\n  component: ImageListComponent,\\n  decorators: [\\n    moduleMetadata({\\n      imports: [\\n        ImageModule.forRoot({\\n          loaders: [\\n            ImigixImageLoader,\\n            cloudinaryImageLoader(\'https://res.cloudinary.com/idemo/image/upload\'),\\n            akamaiImageLoader(\'https://www.akamai.com/content/dam/site/im-demo/media-viewer/\'),\\n          ],\\n        }),\\n        ImageListModule,\\n      ],\\n    }),\\n  ],\\n  parameters: {\\n    controls: { include: [] },\\n    // TODO: https://github.com/storybookjs/storybook/issues/7149\\n    // options: { showPanel: false },\\n  },\\n} as Meta<ImageComponent>;\\n\\nconst Template: Story<ImageListComponent> = (args: ImageListComponent) => ({\\n  component: ImageListComponent,\\n  props: args,\\n});\\n\\nexport const Example = Template.bind({});\\nExample.args = {};\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"ImageListComponent"}]},{"type":"imports","elements":[{"name":"ImageModule"}]},{"type":"exports","elements":[{"name":"ImageListComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ImageModule","id":"module-ImageModule-440ef9d1f856f682008f7c37ee9af741f5c87977c85a83cd8c253dc32873d573f9a10b208e396f0f61d46a28994958718f7f452b105379a4639ed1cdb4bb106c","description":"","deprecationMessage":"","deprecated":false,"file":"src/lib/image.module.ts","methods":[{"name":"forRoot","args":[{"type":"ImageModuleConfig","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ModuleWithProviders<ImageModule>","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"type":"ImageModuleConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Inject, ModuleWithProviders, NgModule, Provider, Type } from \'@angular/core\';\\n\\nimport { defaultImageOptimizerConfig, ImageOptimizerConfig } from \'@ng-easy/image-config\';\\n\\nimport { ImageComponent } from \'./component\';\\nimport { ImageLoader } from \'./loaders\';\\nimport { ImageLoaderRegistry } from \'./services\';\\nimport { IMAGE_OPTIMIZER_CONFIG } from \'./tokens\';\\n\\nexport interface ImageModuleConfig {\\n  imageOptimizerConfig?: ImageOptimizerConfig;\\n  loaders: (Type<ImageLoader> | (() => ImageLoader))[];\\n}\\n\\n@NgModule({\\n  declarations: [ImageComponent],\\n  imports: [CommonModule],\\n  exports: [ImageComponent],\\n})\\nexport class ImageModule {\\n  static forRoot({ imageOptimizerConfig, loaders }: ImageModuleConfig): ModuleWithProviders<ImageModule> {\\n    const classLoaders: Type<ImageLoader>[] = loaders.filter((loader): loader is Type<ImageLoader> => loader.prototype != null);\\n    const factoryLoaders: (() => ImageLoader)[] = loaders.filter((loader): loader is () => ImageLoader => loader.prototype == null);\\n\\n    return {\\n      ngModule: ImageModule,\\n      providers: [\\n        ...classLoaders.map((loader): Provider => ({ provide: ImageLoader, useClass: loader, multi: true })),\\n        ...factoryLoaders.map((loader): Provider => ({ provide: ImageLoader, useFactory: loader, multi: true })),\\n        { provide: IMAGE_OPTIMIZER_CONFIG, useValue: imageOptimizerConfig ?? defaultImageOptimizerConfig },\\n        { provide: Window, useValue: window },\\n      ],\\n    };\\n  }\\n\\n  constructor(@Inject(ImageLoader) loaders: ImageLoader[], loaderRegistry: ImageLoaderRegistry) {\\n    loaderRegistry.registerLoaders(loaders);\\n  }\\n}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"ImageComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"ImageComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"akamaiImageLoader","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/akamai-loader.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(root: string) => () => {\\n  return new AkamaiImageLoader(root, inject(IMAGE_OPTIMIZER_CONFIG));\\n}"},{"name":"cloudinaryImageLoader","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/cloudinary-loader.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(root: string) => () => {\\n  return new CloudinaryImageLoader(root, inject(IMAGE_OPTIMIZER_CONFIG));\\n}"},{"name":"Example","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Fill","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Fixed","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"IMAGE_OPTIMIZER_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"src/lib/tokens/image-optimizer-config.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken<ImageOptimizerConfig>(\'@ng-easy/image:image-optimizer-config\')"},{"name":"Intrinsic","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"placeholderQuality","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"15"},{"name":"placeholderWidth","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"15"},{"name":"preferredOptimizedFormats","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"ImageFormat[]","defaultValue":"[ImageFormat.Webp, ImageFormat.Avif, ImageFormat.Heif, ImageFormat.Jpeg] as const"},{"name":"randomWidth","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"Math.floor(Math.random() * 1000) + 100"},{"name":"Responsive","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ImageListComponent>","defaultValue":"(args: ImageListComponent) => ({\\n  component: ImageListComponent,\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ImageComponent>","defaultValue":"(args: ImageComponent) => ({\\n  component: ImageComponent,\\n  props: args,\\n})"},{"name":"viewportWidthRe","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"/(^|\\\\s)(1?\\\\d?\\\\d)vw/g"}],"functions":[{"name":"getQuality","file":"src/lib/functions/image-quality.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"configQuality","deprecated":false,"deprecationMessage":""}],"returnType":"number","jsdoctags":[{"name":"configQuality","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"typealiases":[{"name":"ImageLayout","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"fixed\\" | \\"intrinsic\\" | \\"responsive\\" | \\"fill\\"","file":"src/lib/models/image-layout.ts","deprecated":false,"deprecationMessage":"","description":"<p>The layout behavior of the image as the viewport changes size. Defaults to <code>intrinsic</code>.</p>\\n<ul>\\n<li>When <code>fixed,</code> the image dimensions will not change as the viewport changes (no responsiveness) similar to the native img element.</li>\\n<li>When <code>intrinsic</code>, the image will scale the dimensions down for smaller viewports but maintain the original dimensions for larger viewports.</li>\\n<li>When <code>responsive</code>, the image will scale the dimensions down for smaller viewports and scale up for larger viewports.</li>\\n<li>When <code>fill</code>, the image will stretch both width and height to the dimensions of the parent element, provided the parent element is relative. This is usually paired with the objectFit property.</li>\\n</ul>\\n","kind":186},{"name":"ImagePlaceholder","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"empty\\" | \\"blur\\"","file":"src/lib/models/image-placeholder.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"ObjectFit","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"contain\\" | \\"cover\\" | \\"fill\\" | \\"none\\" | \\"scale-down\\"","file":"src/lib/models/object-fit.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"enumerations":[],"groupedVariables":{"src/lib/loaders/akamai-loader.ts":[{"name":"akamaiImageLoader","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/akamai-loader.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(root: string) => () => {\\n  return new AkamaiImageLoader(root, inject(IMAGE_OPTIMIZER_CONFIG));\\n}"}],"src/lib/loaders/cloudinary-loader.ts":[{"name":"cloudinaryImageLoader","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/cloudinary-loader.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(root: string) => () => {\\n  return new CloudinaryImageLoader(root, inject(IMAGE_OPTIMIZER_CONFIG));\\n}"}],"src/lib/image-list.component.stories.ts":[{"name":"Example","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ImageListComponent>","defaultValue":"(args: ImageListComponent) => ({\\n  component: ImageListComponent,\\n  props: args,\\n})"}],"src/lib/image.component.stories.ts":[{"name":"Fill","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Fixed","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Intrinsic","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Responsive","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/lib/image.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ImageComponent>","defaultValue":"(args: ImageComponent) => ({\\n  component: ImageComponent,\\n  props: args,\\n})"}],"src/lib/tokens/image-optimizer-config.ts":[{"name":"IMAGE_OPTIMIZER_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"src/lib/tokens/image-optimizer-config.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken<ImageOptimizerConfig>(\'@ng-easy/image:image-optimizer-config\')"}],"src/lib/loaders/image-loader.ts":[{"name":"placeholderQuality","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"15"},{"name":"placeholderWidth","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"15"},{"name":"preferredOptimizedFormats","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"ImageFormat[]","defaultValue":"[ImageFormat.Webp, ImageFormat.Avif, ImageFormat.Heif, ImageFormat.Jpeg] as const"},{"name":"randomWidth","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"Math.floor(Math.random() * 1000) + 100"},{"name":"viewportWidthRe","ctype":"miscellaneous","subtype":"variable","file":"src/lib/loaders/image-loader.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"/(^|\\\\s)(1?\\\\d?\\\\d)vw/g"}]},"groupedFunctions":{"src/lib/functions/image-quality.ts":[{"name":"getQuality","file":"src/lib/functions/image-quality.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"configQuality","deprecated":false,"deprecationMessage":""}],"returnType":"number","jsdoctags":[{"name":"configQuality","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},"groupedEnumerations":{},"groupedTypeAliases":{"src/lib/models/image-layout.ts":[{"name":"ImageLayout","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"fixed\\" | \\"intrinsic\\" | \\"responsive\\" | \\"fill\\"","file":"src/lib/models/image-layout.ts","deprecated":false,"deprecationMessage":"","description":"<p>The layout behavior of the image as the viewport changes size. Defaults to <code>intrinsic</code>.</p>\\n<ul>\\n<li>When <code>fixed,</code> the image dimensions will not change as the viewport changes (no responsiveness) similar to the native img element.</li>\\n<li>When <code>intrinsic</code>, the image will scale the dimensions down for smaller viewports but maintain the original dimensions for larger viewports.</li>\\n<li>When <code>responsive</code>, the image will scale the dimensions down for smaller viewports and scale up for larger viewports.</li>\\n<li>When <code>fill</code>, the image will stretch both width and height to the dimensions of the parent element, provided the parent element is relative. This is usually paired with the objectFit property.</li>\\n</ul>\\n","kind":186}],"src/lib/models/image-placeholder.ts":[{"name":"ImagePlaceholder","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"empty\\" | \\"blur\\"","file":"src/lib/models/image-placeholder.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"src/lib/models/object-fit.ts":[{"name":"ObjectFit","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"contain\\" | \\"cover\\" | \\"fill\\" | \\"none\\" | \\"scale-down\\"","file":"src/lib/models/object-fit.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}]}}}');var parameters={controls:{expanded:!0}};(0,angular.P)(documentation_namespaceObject);var __namedExportsOrder=["parameters"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.uc)(value);case"argTypes":return(0,ClientApi.v9)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"?4f7e":()=>{},"./generated-stories-entry.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./libs/image/src/lib sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./libs/image/src/lib sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[458],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/docs/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-a11y/preview.js-generated-config-entry.js"),__webpack_exec__("./libs/image/.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs"),__webpack_exec__("./node_modules/core-js/proposals/reflect-metadata.js"))));__webpack_require__.O()}]);